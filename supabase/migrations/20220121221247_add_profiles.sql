-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE OR REPLACE FUNCTION public.create_profile_for_new_user()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF SECURITY DEFINER
AS $BODY$
  BEGIN
    INSERT INTO public.profiles (id, name, username, email)
    VALUES (
      NEW.id,
      NEW.raw_user_meta_data ->> 'name',
      NEW.raw_user_meta_data ->> 'username',
      NEW.raw_user_meta_data ->> 'email'
    );
    RETURN NEW;
  END;
  
$BODY$;

CREATE trigger on_auth_user_created
  after INSERT ON auth.users
  FOR each ROW EXECUTE PROCEDURE public.create_profile_for_new_user();

ALTER FUNCTION public.create_profile_for_new_user()
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.create_profile_for_new_user() TO authenticated;

GRANT EXECUTE ON FUNCTION public.create_profile_for_new_user() TO postgres;

GRANT EXECUTE ON FUNCTION public.create_profile_for_new_user() TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.create_profile_for_new_user() TO anon;

GRANT EXECUTE ON FUNCTION public.create_profile_for_new_user() TO service_role;

CREATE TABLE IF NOT EXISTS public.profiles
(
    id uuid NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    username character varying COLLATE pg_catalog."default" NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    avatar_url character varying COLLATE pg_catalog."default" NOT NULL DEFAULT 'https://schveufltdgsfxvyzrwb.supabase.in/storage/v1/object/sign/avatars/user.jpg?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJhdmF0YXJzL3VzZXIuanBnIiwiaWF0IjoxNjQyODAyOTUxLCJleHAiOjE5NTgxNjI5NTF9.Yy91yZJX1O_8VG3Gjkr1QXoaRFUigbchHaD20hhHF9A'::character varying,
    CONSTRAINT profiles_pkey PRIMARY KEY (id),
    CONSTRAINT profiles_id_fkey FOREIGN KEY (id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.profiles
    OWNER to postgres;

GRANT ALL ON TABLE public.profiles TO anon;

GRANT ALL ON TABLE public.profiles TO authenticated;

GRANT ALL ON TABLE public.profiles TO postgres;

GRANT ALL ON TABLE public.profiles TO service_role;
